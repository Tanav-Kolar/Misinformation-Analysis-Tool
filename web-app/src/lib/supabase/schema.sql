-- Create the 'analyses' table to store user inputs and generated reports.
CREATE TABLE
  public.analyses (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),
    user_id UUID REFERENCES auth.users (id) ON DELETE CASCADE,
    text_input TEXT NULL,
    url_input TEXT NULL,
    summary TEXT NULL,
    analysis_details JSONB NULL,
    sources TEXT[] NULL,
    CONSTRAINT analyses_pkey PRIMARY KEY (id)
  );

-- Enable Row Level Security (RLS) for the 'analyses' table.
ALTER TABLE public.analyses ENABLE ROW LEVEL SECURITY;

-- Create a policy that allows users to view their own analyses.
CREATE POLICY "Users can view their own analyses" ON public.analyses FOR
SELECT
  USING (auth.uid () = user_id);

-- Create a policy that allows users to insert new analyses for themselves.
CREATE POLICY "Users can insert new analyses for themselves" ON public.analyses FOR INSERT
WITH
  CHECK (auth.uid () = user_id);

-- Allow all operations for the service_role key (used for server-side operations).
-- This is important for allowing server actions to work correctly.
CREATE POLICY "Allow full access for service_role" ON public.analyses
    FOR ALL
    USING (TRUE)
    WITH CHECK (TRUE);
